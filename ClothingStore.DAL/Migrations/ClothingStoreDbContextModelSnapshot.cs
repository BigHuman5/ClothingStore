// <auto-generated />
using System;
using ClothingStore.DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClothingStore.DAL.Migrations
{
    [DbContext(typeof(ClothingStoreDbContext))]
    partial class ClothingStoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClothingStore.DAL.Entities.Brands", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Colors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Dimensions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MaxSize")
                        .HasColumnType("int");

                    b.Property<int>("MinSize")
                        .HasColumnType("int");

                    b.Property<string>("StringSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("nameDimensionsId")
                        .HasColumnType("int");

                    b.Property<int?>("typeDimensionsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("nameDimensionsId");

                    b.HasIndex("typeDimensionsId");

                    b.ToTable("Dimensions");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.NamesDimensions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("NamesDimensions");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Types", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.TypesDimensions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("typeHumanId")
                        .HasColumnType("int");

                    b.Property<int?>("typeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("typeHumanId");

                    b.HasIndex("typeId");

                    b.ToTable("TypesDimensions");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.TypesHuman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TypesHumans");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Dimensions", b =>
                {
                    b.HasOne("ClothingStore.DAL.Entities.NamesDimensions", "nameDimensions")
                        .WithMany("Dimensions")
                        .HasForeignKey("nameDimensionsId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ClothingStore.DAL.Entities.TypesDimensions", "typeDimensions")
                        .WithMany("Dimensions")
                        .HasForeignKey("typeDimensionsId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("nameDimensions");

                    b.Navigation("typeDimensions");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.TypesDimensions", b =>
                {
                    b.HasOne("ClothingStore.DAL.Entities.TypesHuman", "typeHuman")
                        .WithMany("TypesDimensions")
                        .HasForeignKey("typeHumanId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ClothingStore.DAL.Entities.Types", "type")
                        .WithMany("TypesDimensions")
                        .HasForeignKey("typeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("type");

                    b.Navigation("typeHuman");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.NamesDimensions", b =>
                {
                    b.Navigation("Dimensions");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Types", b =>
                {
                    b.Navigation("TypesDimensions");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.TypesDimensions", b =>
                {
                    b.Navigation("Dimensions");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.TypesHuman", b =>
                {
                    b.Navigation("TypesDimensions");
                });
#pragma warning restore 612, 618
        }
    }
}
