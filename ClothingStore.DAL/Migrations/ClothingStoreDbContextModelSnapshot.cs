// <auto-generated />
using System;
using ClothingStore.DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClothingStore.DAL.Migrations
{
    [DbContext(typeof(ClothingStoreDbContext))]
    partial class ClothingStoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClothingStore.DAL.Entities.Brands", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("fakePopularity")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("realPopulatiry")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Cards", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Addition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int?>("brandId")
                        .HasColumnType("int");

                    b.Property<int?>("collectionId")
                        .HasColumnType("int");

                    b.Property<int>("fakePopularity")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("realPopulatiry")
                        .HasColumnType("int");

                    b.Property<int?>("subcategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("brandId");

                    b.HasIndex("collectionId");

                    b.HasIndex("subcategoryId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Collections", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActual")
                        .HasColumnType("bit");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Colors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Dimensions.CriteriaOfDimensions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MaxSize")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<int?>("MinSize")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("namesCriteriaOfDimensionsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("namesCriteriaOfDimensionsId");

                    b.ToTable("CriteriaOfDimensions");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Dimensions.Dimensions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CriteriaOfDimensionsId")
                        .HasColumnType("int");

                    b.Property<int?>("UnionNamesAndDimensionsId")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("sizesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CriteriaOfDimensionsId");

                    b.HasIndex("UnionNamesAndDimensionsId");

                    b.HasIndex("sizesId");

                    b.ToTable("Dimensions");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Dimensions.NamesCriteriaOfDimensions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("NamesCriteriaOfDimensions");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Dimensions.NamesDimensions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("NamesDimensions");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Dimensions.Sizes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("namesDimensionsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("namesDimensionsId");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Dimensions.UnionCategoryAndTypeHuman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("categoryId")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("typeHumanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("categoryId");

                    b.HasIndex("typeHumanId");

                    b.ToTable("UnionCategoryAndTypeHuman");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Dimensions.UnionNamesAndDimensions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("NamesDimensionsId")
                        .HasColumnType("int");

                    b.Property<int?>("UnionCategoryAndTypeHumanId")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("NamesDimensionsId");

                    b.HasIndex("UnionCategoryAndTypeHumanId");

                    b.ToTable("UnionNamesAndDimensions");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Dimensions.UnionNamesCriteriaOfDimensions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("NamesCriteriaOfDimensionsId")
                        .HasColumnType("int");

                    b.Property<int?>("UnionCategoryAndTypeHumanId")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("NamesCriteriaOfDimensionsId");

                    b.HasIndex("UnionCategoryAndTypeHumanId");

                    b.ToTable("UnionNamesCriteriaOfDimensions");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("cardId")
                        .HasColumnType("int");

                    b.Property<int?>("colorId")
                        .HasColumnType("int");

                    b.Property<int>("howMany")
                        .HasColumnType("int");

                    b.Property<int>("howManyPictures")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("sizeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("cardId");

                    b.HasIndex("colorId");

                    b.HasIndex("sizeId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Subcategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("unionCategoryAndTypeHumanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("unionCategoryAndTypeHumanId");

                    b.ToTable("Subcategories");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.TypesHuman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TypesHumans");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Cards", b =>
                {
                    b.HasOne("ClothingStore.DAL.Entities.Brands", "Brand")
                        .WithMany("Cards")
                        .HasForeignKey("brandId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ClothingStore.DAL.Entities.Collections", "Collections")
                        .WithMany("Cards")
                        .HasForeignKey("collectionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ClothingStore.DAL.Entities.Subcategory", "Subcategory")
                        .WithMany("Cards")
                        .HasForeignKey("subcategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Brand");

                    b.Navigation("Collections");

                    b.Navigation("Subcategory");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Dimensions.CriteriaOfDimensions", b =>
                {
                    b.HasOne("ClothingStore.DAL.Entities.Dimensions.UnionNamesCriteriaOfDimensions", "namesCriteriaOfDimensions")
                        .WithMany("criteriaOfDimensions")
                        .HasForeignKey("namesCriteriaOfDimensionsId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("namesCriteriaOfDimensions");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Dimensions.Dimensions", b =>
                {
                    b.HasOne("ClothingStore.DAL.Entities.Dimensions.CriteriaOfDimensions", "CriteriaOfDimensions")
                        .WithMany("dimensions")
                        .HasForeignKey("CriteriaOfDimensionsId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ClothingStore.DAL.Entities.Dimensions.UnionNamesAndDimensions", null)
                        .WithMany("dimensions")
                        .HasForeignKey("UnionNamesAndDimensionsId");

                    b.HasOne("ClothingStore.DAL.Entities.Dimensions.Sizes", "sizes")
                        .WithMany("Dimensions")
                        .HasForeignKey("sizesId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CriteriaOfDimensions");

                    b.Navigation("sizes");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Dimensions.Sizes", b =>
                {
                    b.HasOne("ClothingStore.DAL.Entities.Dimensions.UnionNamesAndDimensions", "namesDimensions")
                        .WithMany("sizes")
                        .HasForeignKey("namesDimensionsId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("namesDimensions");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Dimensions.UnionCategoryAndTypeHuman", b =>
                {
                    b.HasOne("ClothingStore.DAL.Entities.Category", "category")
                        .WithMany("TypesDimensions")
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ClothingStore.DAL.Entities.TypesHuman", "typeHuman")
                        .WithMany("TypesDimensions")
                        .HasForeignKey("typeHumanId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("category");

                    b.Navigation("typeHuman");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Dimensions.UnionNamesAndDimensions", b =>
                {
                    b.HasOne("ClothingStore.DAL.Entities.Dimensions.NamesDimensions", "NamesDimensions")
                        .WithMany("union")
                        .HasForeignKey("NamesDimensionsId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ClothingStore.DAL.Entities.Dimensions.UnionCategoryAndTypeHuman", "unionCategoryAndTypeHuman")
                        .WithMany("namesDimensions")
                        .HasForeignKey("UnionCategoryAndTypeHumanId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("NamesDimensions");

                    b.Navigation("unionCategoryAndTypeHuman");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Dimensions.UnionNamesCriteriaOfDimensions", b =>
                {
                    b.HasOne("ClothingStore.DAL.Entities.Dimensions.NamesCriteriaOfDimensions", "NamesCriteriaOfDimensions")
                        .WithMany("union")
                        .HasForeignKey("NamesCriteriaOfDimensionsId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ClothingStore.DAL.Entities.Dimensions.UnionCategoryAndTypeHuman", "unionCategoryAndTypeHuman")
                        .WithMany("namesCriteria")
                        .HasForeignKey("UnionCategoryAndTypeHumanId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("NamesCriteriaOfDimensions");

                    b.Navigation("unionCategoryAndTypeHuman");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Products", b =>
                {
                    b.HasOne("ClothingStore.DAL.Entities.Cards", "Card")
                        .WithMany()
                        .HasForeignKey("cardId");

                    b.HasOne("ClothingStore.DAL.Entities.Colors", "Colors")
                        .WithMany("Products")
                        .HasForeignKey("colorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ClothingStore.DAL.Entities.Dimensions.Sizes", "Sizes")
                        .WithMany("Products")
                        .HasForeignKey("sizeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Card");

                    b.Navigation("Colors");

                    b.Navigation("Sizes");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Subcategory", b =>
                {
                    b.HasOne("ClothingStore.DAL.Entities.Category", null)
                        .WithMany("Subcategory")
                        .HasForeignKey("CategoryId");

                    b.HasOne("ClothingStore.DAL.Entities.Dimensions.UnionCategoryAndTypeHuman", "unionCategoryAndTypeHuman")
                        .WithMany("subcategories")
                        .HasForeignKey("unionCategoryAndTypeHumanId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("unionCategoryAndTypeHuman");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Brands", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Category", b =>
                {
                    b.Navigation("Subcategory");

                    b.Navigation("TypesDimensions");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Collections", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Colors", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Dimensions.CriteriaOfDimensions", b =>
                {
                    b.Navigation("dimensions");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Dimensions.NamesCriteriaOfDimensions", b =>
                {
                    b.Navigation("union");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Dimensions.NamesDimensions", b =>
                {
                    b.Navigation("union");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Dimensions.Sizes", b =>
                {
                    b.Navigation("Dimensions");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Dimensions.UnionCategoryAndTypeHuman", b =>
                {
                    b.Navigation("namesCriteria");

                    b.Navigation("namesDimensions");

                    b.Navigation("subcategories");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Dimensions.UnionNamesAndDimensions", b =>
                {
                    b.Navigation("dimensions");

                    b.Navigation("sizes");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Dimensions.UnionNamesCriteriaOfDimensions", b =>
                {
                    b.Navigation("criteriaOfDimensions");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.Subcategory", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("ClothingStore.DAL.Entities.TypesHuman", b =>
                {
                    b.Navigation("TypesDimensions");
                });
#pragma warning restore 612, 618
        }
    }
}
